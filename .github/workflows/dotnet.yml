# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
    paths:
      - 'server/**'
      - '.github\workflows\dotnet.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'server/**'
      - '.github\workflows\dotnet.yml'
  workflow_dispatch:

env:
  HUSKY: 0.

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Restore dependencies
      run: dotnet restore server/src/StarWarsProgressBarIssueTracker.sln

    - name: Generate GitHub GraphQL client
      run: dotnet build server/src/StarWarsProgressBarIssueTracker.Infrastructure.GitHub/StarWarsProgressBarIssueTracker.Infrastructure.GitHub.csproj

    - name: Generate Gitlab GraphQL client
      run: dotnet build server/src/StarWarsProgressBarIssueTracker.Infrastructure.Gitlab/StarWarsProgressBarIssueTracker.Infrastructure.Gitlab.csproj

    - name: Build
      run: dotnet build server/src/StarWarsProgressBarIssueTracker.sln --no-restore

  tests:
    name: Tests
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Restore dependencies
      run: dotnet restore server/src/StarWarsProgressBarIssueTracker.sln

    - name: Generate GitHub GraphQL client
      run: dotnet build server/src/StarWarsProgressBarIssueTracker.Infrastructure.GitHub/StarWarsProgressBarIssueTracker.Infrastructure.GitHub.csproj

    - name: Generate Gitlab GraphQL client
      run: dotnet build server/src/StarWarsProgressBarIssueTracker.Infrastructure.Gitlab/StarWarsProgressBarIssueTracker.Infrastructure.Gitlab.csproj

    - name: Build
      run: dotnet build server/src/StarWarsProgressBarIssueTracker.sln --no-restore

    - name: Test
      run: dotnet test server/src/StarWarsProgressBarIssueTracker.sln --no-build --verbosity q --logger "trx" --results-directory "TestResults" --filter "TestCategory!=Error"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: Test results
        path: TestResults
      if: ${{ always() }}

    - name: Test Report
      uses: dorny/test-reporter@v1.9.1
      if: success() || failure()
      with:
        name: .NET Tests
        path: TestResults/*.trx
        reporter: dotnet-trx

  strykerDomain:
    name: Stryker.NET Domain
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Restore dependencies
      run: dotnet restore server/src/StarWarsProgressBarIssueTracker.sln

    - name: Restore tools
      run: dotnet tool restore

    - name: Execute Stryker.NET
      run: dotnet stryker
      working-directory: ${{ github.workspace }}/server/src/StarWarsProgressBarIssueTracker.Domain.Tests

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: Stryker.NET Domain results
        path: ${{ github.workspace }}/server/src/StarWarsProgressBarIssueTracker.Domain.Tests/StrykerOutput/**/*.html
      if: ${{ always() }}

  strykerInfrastructure:
    name: Stryker.NET Infrastructure
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Restore dependencies
      run: dotnet restore server/src/StarWarsProgressBarIssueTracker.sln

    - name: Restore tools
      run: dotnet tool restore

    - name: Execute Stryker.NET
      run: dotnet stryker
      working-directory: ${{ github.workspace }}/server/src/StarWarsProgressBarIssueTracker.Infrastructure.Tests

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: Stryker.NET Infrastructure results
        path: ${{ github.workspace }}/server/src/StarWarsProgressBarIssueTracker.Domain.Tests/StrykerOutput/**/*.html
      if: ${{ always() }}

  strykerInfrastructureGitlab:
    name: Stryker.NET Infrastructure Gitlab
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Restore dependencies
      run: dotnet restore server/src/StarWarsProgressBarIssueTracker.sln

    - name: Restore tools
      run: dotnet tool restore

    - name: Execute Stryker.NET
      run: dotnet stryker
      working-directory: ${{ github.workspace }}/server/src/StarWarsProgressBarIssueTracker.Infrastructure.Gitlab.Tests

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: Stryker.NET Infrastructure Gitlab results
        path: ${{ github.workspace }}/server/src/StarWarsProgressBarIssueTracker.Domain.Tests/StrykerOutput/**/*.html
      if: ${{ always() }}
