services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ISSUE_TRACKER_DB=${POSTGRES_DB}
      - ISSUE_TRACKER_USER=${ISSUE_TRACKER_USER}
      - ISSUE_TRACKER_USER_PASSWORD=${ISSUE_TRACKER_USER_PASSWORD}
      - ISSUE_TRACKER_SCHEMA=${ISSUE_TRACKER_SCHEMA}
      - KEYCLOAK_DB=${KEYCLOAK_DB}
      - KEYCLOAK_ADMIN=${KEYCLOAK_DB_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_DB_ADMIN_PASSWORD}
      - KEYCLOAK_USER=${KEYCLOAK_DB_USER}
      - KEYCLOAK_USER_PASSWORD=${KEYCLOAK_DB_USER_PASSWORD}
      - KEYCLOAK_SCHEMAS=${KEYCLOAK_DB_SCHEMA}
    ports:
      - "5432:5432"
    volumes:
      - ../database:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    hostname: issuetrackerdb
    container_name: issue_tracker_db
    restart: unless-stopped
    networks:
      - issue_tracker_network
      - keycloak_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

#  mongo:
#    image: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: example
#
#  mongo-express:
#    image: mongo-express
#    restart: always
#    ports:
#      - "8081:8081"
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: example
#      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#      ME_CONFIG_BASICAUTH: false

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgdata:/var/lib/pgadmin/data
    container_name: issue_tracker_pgadmin
    hostname: issuetrackerpgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - issue_tracker_network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      - KEYCLOAK_USER=${KEYCLOAK_USER}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KEYCLOAK_ADMIN}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
#      - DB_VENDOR=postgres
#      - DB_ADDR=issuetrackerdb
#      - DB_SCHEMA=issue-tracker-keycloak
#      - DB_DATABASE=${KEYCLOAK_DB}
#      - DB_USER=${KEYCLOAK_DB_USER}
#      - DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL_HOST=issuetrackerdb
      - KC_DB_URL_PORT=5432
      - KC_DB_URL_DATABASE=${KEYCLOAK_DB}
      - KC_DB_USERNAME=${KEYCLOAK_DB_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_DB_USER_PASSWORD}
      - KC_DB_SCHEMA=${KEYCLOAK_DB_SCHEMA}
      - KC_HEALTH_ENABLED=true
#      KC_HOSTNAME: localhost
#      KC_HOSTNAME_PORT: 7080
#      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#      KC_HEALTH_ENABLED: "true"
#      KC_LOG_LEVEL: info
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ready" ]
#      interval: 15s
#      timeout: 2s
#      retries: 15
    command: [ "start-dev", "--http-port", "8080", "--https-port", "7443" ]
    ports:
      - "8080:8080"
#      - "7080:7080"
      - "7443:7443"
    volumes:
      - keycloak-data:/opt/keycloak/standalone/data
    restart: always
    networks:
      - keycloak_network

  issuetracker:
    build:
      context: ./src
      dockerfile: StarWarsProgressBarIssueTracker.App/Dockerfile
      args:
        - SERVER_CONNECTION_STRING=${SERVER_CONNECTION_STRING}
        - GITLAB_PROJECT_PATH=${GITLAB_PROJECT_PATH}
        - GITLAB_TOKEN=${GITLAB_TOKEN}
        - GITHUB_PROJECT_PATH=${GITHUB_PROJECT_PATH}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
        - HUSKY=0
    hostname: issuetrackerserver
    container_name: issue_tracker_server
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_URLS=http://+:8081
      - ConnectionStrings__IssueTrackerContext=${SERVER_CONNECTION_STRING}
      - Gitlab__ProjectPath=${GITLAB_PROJECT_PATH}
      - Gitlab__Token=${GITLAB_TOKEN}
      - GitHub__ProjectPath=${GITHUB_PROJECT_PATH}
      - GitHub__Token=${GITHUB_TOKEN}
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - issue_tracker_network
      - keycloak_network
    entrypoint: ["sh", "-c", "until pg_isready -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB}; do echo waiting for db; sleep 2; done; dotnet StarWarsProgressBarIssueTracker.App.dll"]

volumes:
  pgdata:
  keycloak-data:
    driver: local

networks:
  issue_tracker_network:
    external: false
  keycloak_network:
    driver: bridge
